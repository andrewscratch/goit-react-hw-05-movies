{"version":3,"file":"static/js/150.7aec510c.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { theme } from '../../services';\n\nexport const CardWrapper = styled.section`\n  display: flex;\n  gap: ${theme.space[4]}px;\n  margin-top: ${theme.space[4]}px;\n  padding-left: ${theme.space[7]}px;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  max-width: ${theme.sizes[4]}px;\n  height: 100%;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${theme.space[4]}px;\n  padding-left: ${theme.space[7]}px;\n`;\n\nexport const Title = styled.h1`\n  margin: 0;\n`;\n\nexport const Subtitle = styled.h2`\n  color: inherit;\n  margin: 0;\n`;\n\nexport const Text = styled.p`\n  font-size: ${theme.fontSizes[1]}px;\n  font-weight: 400;\n  padding-top: ${theme.space[0]}px;\n  margin: 0;\n`;\n\nexport const AddInfo = styled.h2`\n  color: inherit;\n  margin: 0;\n  padding-top: ${theme.space[6]}px;\n  padding-left: ${theme.space[7]}px;\n`;","import PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport { POSTER_URL } from 'services';\nimport {\n  CardWrapper,\n  MovieInfo,\n  Title,\n  Subtitle,\n  Poster,\n  Text,\n  AddInfo,\n} from './MovieCard.styled';\nimport noPoster from '../../images/noPoster.jpg';\n\nexport const MovieCard = ({\n  movieDetails: {\n    poster_path,\n    genres,\n    overview,\n    release_date,\n    title,\n    vote_average,\n  },\n}) => {\n  const genresNames = genres.map(genre => genre.name).join(', ');\n\n  return (\n    <>\n      <CardWrapper>\n        {poster_path && (\n          <Poster src={`${POSTER_URL}${poster_path}`} alt={title} />\n        )}\n        {!poster_path && <Poster src={noPoster} alt={title} />}\n        <MovieInfo>\n          <Title> {title} </Title>\n          <Subtitle>\n            Released by:\n            <Text>{format(new Date(release_date), 'yyyy MMM dd')}</Text>\n          </Subtitle>\n          <Subtitle>User Score: {Math.round(vote_average * 10)}%</Subtitle>\n          <Subtitle>\n            OverView:\n            <Text>{overview}</Text>\n          </Subtitle>\n          <Subtitle>\n            Genres:\n            <Text>{genresNames}</Text>\n          </Subtitle>\n        </MovieInfo>\n      </CardWrapper>\n      <AddInfo>Additional information</AddInfo>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movieDetails: PropTypes.object.isRequired,\n};","import styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport { NavLink, Link } from 'react-router-dom';\nimport { theme } from '../../services';\n\nexport const ButtonGoBack = ({ to, children }) => {\n  return <ButtonStyles to={to}>{children}</ButtonStyles>;\n};\n\nButtonGoBack.propTypes = {\n  to: PropTypes.string.isRequired,\n};\n\nexport const ButtonStyles = styled(Link)`\n  font-size: ${theme.fontSizes[1]}px;\n  text-decoration: none;\n  text-align: center;\n  display: inline-block;\n  color: inherit;\n  background-color: ${theme.colors.secondBg};\n  width: ${theme.sizes[3]}px;\n  margin-top: ${theme.space[2]}px;\n  margin-left: ${theme.space[7]}px;\n  padding: ${theme.space[0]}px ${theme.space[1]}px;\n  border-radius: ${theme.radii[1]}px;\n  border: none;\n  box-shadow: ${theme.shadows.prime};\n  transition: ${theme.transitions.all};\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background-color: ${theme.colors.otherBg};\n    color: ${theme.colors.second};\n  }\n`;\n\nexport const AddInfoWrapper = styled.div`\n  display: flex;\n  gap: ${theme.space[4]}px;\n  padding-left: ${theme.space[7]}px;\n  margin-top: ${theme.space[2]}px;\n`;\n\nexport const InfoItem = styled(NavLink)`\n  font-size: ${theme.fontSizes[2]}px;\n  text-decoration: none;\n  text-align: center;\n  color: inherit;\n  background-color: ${theme.colors.secondBg};\n  padding: ${theme.space[0]}px ${theme.space[1]}px;\n  width: ${theme.sizes[2]}px;\n  margin: 0;\n  border-radius: ${theme.radii[1]}px;\n  border: none;\n  box-shadow: ${theme.shadows.prime};\n  transition: ${theme.transitions.all};\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background-color: ${theme.colors.otherBg};\n    color: ${theme.colors.second};\n  }\n`;","import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { API } from 'services';\nimport { Loader } from 'services';\nimport { MovieCard } from 'components/MovieCard';\nimport { ButtonGoBack, AddInfoWrapper, InfoItem } from './MovieDetails.styled';\n\nexport const MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movieDetails, setMovieDetails] = useState();\n\n    const location = useLocation();\n\n    const initialPath = useRef(location?.state?.from?.pathname || null);\n\n    let backLink = '';\n    if (initialPath.current === '/') {\n        backLink = '/';\n    } else backLink = '/movies';\n\n    useEffect(() => {\n        API.fetchMovieById(movieId)\n            .then(movie => setMovieDetails(movie))\n            .catch(() => toast.error('Sorry, there are no details about this movie'));\n    }, [movieId]);\n\n    return (\n   <>\n      {movieDetails && (\n        <Suspense fallback={<Loader />}>\n          <ButtonGoBack to={backLink}>â¬… Go back</ButtonGoBack>\n          <MovieCard movieDetails={movieDetails} />\n          <AddInfoWrapper>\n            <InfoItem\n              to={`/movies/${movieId}/cast`}\n              // state={{ from: location }}\n            >\n              Cast\n            </InfoItem>\n            <InfoItem\n              to={`/movies/${movieId}/reviews`}\n              // state={{ from: location }}\n            >\n              Reviews\n            </InfoItem>\n          </AddInfoWrapper>\n        </Suspense>\n      )}\n      {movieDetails && (\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      )}\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n};"],"names":["CardWrapper","styled","theme","Poster","MovieInfo","Title","Subtitle","Text","AddInfo","MovieCard","movieDetails","poster_path","genres","overview","release_date","title","vote_average","genresNames","map","genre","name","join","src","POSTER_URL","alt","noPoster","format","Date","Math","round","ButtonGoBack","to","children","ButtonStyles","Link","AddInfoWrapper","InfoItem","NavLink","MovieDetails","movieId","useParams","useState","setMovieDetails","location","useLocation","backLink","useRef","state","from","pathname","current","useEffect","API","then","movie","catch","toast","Suspense","fallback","autoClose"],"sourceRoot":""}